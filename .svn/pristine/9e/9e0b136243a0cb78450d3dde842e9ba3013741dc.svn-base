package org.cqmusician.exam.ui;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ListView;

import com.google.gson.Gson;

import org.cqmusician.exam.R;
import org.cqmusician.exam.base.BaseBackAct;
import org.cqmusician.exam.base.Constant;
import org.cqmusician.exam.base.MyApp;
import org.cqmusician.exam.bean.ExamInfo;
import org.cqmusician.exam.bean.Major;
import org.cqmusician.exam.bean.Teacher;
import org.cqmusician.exam.bean.TestMajorResultStudentInfo;
import org.cqmusician.exam.bean.TestRoom;
import org.cqmusician.exam.bean.TestRoomStudent;
import org.cqmusician.exam.http.Api;
import org.cqmusician.exam.http.ListCallback;
import org.cqmusician.exam.http.ObjCallback;
import org.cqmusician.exam.http.URLS;
import org.cqmusician.exam.ui.adapter.MajorLvlAdapter;
import org.cqmusician.exam.ui.adapter.StudentListAdapter;
import org.cqmusician.exam.utils.ConfigUtils;
import org.cqmusician.exam.view.dialog.ClickListener;
import org.cqmusician.exam.view.dialog.MyDialog;
import org.cqmusician.exam.view.pop.PopSelectFilter;

import java.util.ArrayList;
import java.util.List;

import static org.cqmusician.exam.http.URLS.TEST_ROOM_STUDENT_INFO_LIST;

/**
 * Created by qin.
 */

public class StudentListActivity extends BaseBackAct implements SwipeRefreshLayout.OnRefreshListener, View.OnClickListener {

    private TestRoom testRoom;
    private ListView listView;
    private BaseAdapter adapter;
    private Teacher teacher;
    private SwipeRefreshLayout pull_refresh;
    private List<TestRoomStudent> data = new ArrayList<>();
    private Button btn_filter;
    private View rootView;
    private String currentState = "-1";//
    private PopSelectFilter pop;
    private int clickPosition;
    private TestRoomStudent testRoomStudent;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        rootView = View.inflate(this, R.layout.act_student_list,null);
        setContentView(rootView);
        addNavBtn();
        setTitle("我的考生");
        testRoom = (TestRoom) getIntent().getSerializableExtra("testRoom");
        teacher = (Teacher) getIntent().getSerializableExtra("teacher");
        initViews();
        onRefresh();
    }

    private void initViews() {
        listView = (ListView) findViewById(R.id.list_view);
        listView.setAdapter(adapter = new StudentListAdapter(this,data));
        pull_refresh = (SwipeRefreshLayout)findViewById(R.id.pull_refresh);
        pull_refresh.setOnRefreshListener(this);
        btn_filter = (Button) findViewById(R.id.btn_filter);
        btn_filter.setOnClickListener(this);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                goToStudentInfo(filterStudent(currentState).get(position).getTestNumber());
                /*testRoomStudent = data.get(position);
                fetchGrade();*/
            }
        });
    }

    private void goToStudentInfo(String textNumber){
        new Api(this, URLS.generateUrl(URLS.GET_STUDENT_BY_NUMBER))
                .add("testNumber",textNumber)
                .add("sessionId", ((Teacher) getIntent().getSerializableExtra("teacher")).getSessionId())
                .post(new ObjCallback<ExamInfo>() {
                    @Override
                    public void onSuccess(ExamInfo obj) {

                        if(TextUtils.isEmpty(obj.getStuPhoto())){
                            bd.getDialog().showCancle("请拍照后再参加考级","确定").setOnClickView(R.id.btn_mid, new ClickListener() {
                                @Override
                                public void onClick(View var1) {
//                                    findViewById(R.id.bt_textsave).performClick();
                                }
                            }).setCancelable(false);
                        }else {
                            Bundle bundle = getIntent().getExtras();
                            bundle.putSerializable("examInfo", obj);
                            bd.jump(StuInfoAct.class, bundle);
                            //bd.back();
                        }
                    }
                }, "正在获取考试信息");
    }

    @Override
    public void onRefresh() {

        new Api(this, URLS.generateUrl(TEST_ROOM_STUDENT_INFO_LIST))
                .add("sessionId",teacher.getSessionId())
                .add("testId",testRoom.getTestId())
                .add("siteId",testRoom.getSiteId())
                .add("testDate",testRoom.getFormatedTime())
                .add("timeType",testRoom.getTimeType())
                .add("roomName",testRoom.getRoomNo())
                .post(new ListCallback<TestRoomStudent>() {
                    @Override
                    public void onSuccess(List<TestRoomStudent> list) {
                        pull_refresh.setRefreshing(false);
                        data.clear();
                        data.addAll(list);
                        adapter = new StudentListAdapter(StudentListActivity.this,filterStudent(currentState));
                        listView.setAdapter(adapter);
                    }

                    @Override
                    public void onError(Throwable ex) {
                        super.onError(ex);
                        pull_refresh.setRefreshing(false);
                    }
                });
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.btn_filter:
                pop = new PopSelectFilter(this,this);
                pop.showAsDropDown(btn_filter);
                break;
            case R.id.btn_sub:
                btn_filter.setText(((Button)v).getText());
                currentState = "2";
                listView.setAdapter(new StudentListAdapter(StudentListActivity.this,filterStudent(currentState)));
                pop.dismiss();
                break;
            case R.id.btn_not_sub:
                btn_filter.setText(((Button)v).getText());
                currentState = "1";
                listView.setAdapter(new StudentListAdapter(StudentListActivity.this,filterStudent(currentState)));
                pop.dismiss();
                break;
            case R.id.btn_not_test:
                btn_filter.setText(((Button)v).getText());
                currentState = "0";
                listView.setAdapter(new StudentListAdapter(StudentListActivity.this,filterStudent(currentState)));
                pop.dismiss();
                break;
            case R.id.btn_all:
                btn_filter.setText(((Button)v).getText());
                currentState = "-1";
                listView.setAdapter(new StudentListAdapter(StudentListActivity.this,filterStudent(currentState)));
                pop.dismiss();
                break;
        }
    }

    private List<TestRoomStudent> filterStudent(String state){
        if ("-1".equals(state)) return data;
        List<TestRoomStudent> list = new ArrayList<>();
        for (TestRoomStudent testRoomStudent : data) {
            if (testRoomStudent.getStatus().equals(state)){
                list.add(testRoomStudent);
            }
        }
        return list;
    }

    private void fetchGrade(){
        final List<Major> majorList = testRoomStudent.getMajorList();
        final MyDialog dialog = new MyDialog(StudentListActivity.this);
        dialog.setContentView(R.layout.dialog_choose_lvl);
        ListView lv_lvl = dialog.findViewById(R.id.lv_lvl);
        lv_lvl.setAdapter(new MajorLvlAdapter(StudentListActivity.this,majorList));
        lv_lvl.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int position, long id) {
                Major major = majorList.get(position);
                int isOnline = ConfigUtils.getInt(Constant.IS_ONLINE);
                if (isOnline == 1 || !major.isGrading()){
                    dialog.dismiss();
                    String testMajorResultId = major.getTestMajorResultId();
                    String sessionId = MyApp.getTeacher().getSessionId();
                    new Api(StudentListActivity.this, URLS.generateUrl(URLS.TEST_MAJOR_RESULT_STUDENT_INFO))
                            .add("testMajorResultId",testMajorResultId)
                            .add("sessionId",sessionId)
                            .post(new ObjCallback<TestMajorResultStudentInfo>() {
                                @Override
                                public void onSuccess(TestMajorResultStudentInfo obj) {
                                    Bundle bundle = getIntent().getExtras();
                                    if (bundle != null){
                                        bundle.putString(SubTestAct.MAJOR_ID,major.getMajorId());
                                        bundle.putString(SubTestAct.ID,major.getId());
                                        bundle.putString(SubTestAct.TEST_MAJOR_RESULT_ID,testMajorResultId);
                                        bundle.putParcelable(SubTestAct.DETAIL_INFO,obj);
                                        bd.jumpResult(SubTestAct.class, 0, bundle);
                                    }
                                }
                            },"正在获取考生成绩");
                }else {
                    bd.toastFailed("还未打过成绩");
                }

            }
        });
        dialog.show();

    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 0 && resultCode == RESULT_OK){
            testRoomStudent.getMajorList().get(clickPosition).setGrading(false);
            for (Major major : testRoomStudent.getMajorList()) {
                if (major.isGrading()){
                    return;
                }
            }
            bd.back();
        }
    }

}
